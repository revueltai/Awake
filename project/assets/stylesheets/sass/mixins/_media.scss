
@mixin media ($size: 'default', $orientation: '', $mode: 'mobile-first', $pixel-ratio: '') {

  $has-size: false;
  $main-rule: 'min-width';
  $rules: '';

  @if ($mode == desktop-first or $size == default) {
    $main-rule: 'max-width';
  }

  @each $current-size, $curent-size-value in $media-sizes {
    @if ($size == $current-size) {
      $has-size: true;
      $rules: '(#{$main-rule}: #{$curent-size-value})';
    }
  }

  @if ($has-size == false) {
    $rules: $size;
  } @else {

    @if ($orientation == portrait or $orientation == landscape) {
      $rules: $rules + ' and (orientation: #{$orientation})';
    }

    @if ($pixel-ratio != '') {
      $rules: $rules + ' and (-webkit-device-pixel-ratio: #{$pixel-ratio})';
    }
  }

  @media only screen and #{$rules} { @content; }

}


@mixin media-device($device, $orientation: 'portrait') {
  @each $current-device, $values in $media-devices {
    @if ($device == $current-device) {

      $width: null;
      $height: null;

      @if ($orientation == 'portrait') {
        $width: map-get($values, 'w');
        $height: map-get($values, 'h');
      }
      @else if ($orientation == 'landscape') {
        $width: map-get($values, 'h');
        $height: map-get($values, 'w');
      }
      @else {
        @error '"#{$orientation}" is not a valid value for media queries';
      }

      $pixel-ratio: map-get($values, 'pr');

      @media only screen
      and (device-width: #{$width})
      and (device-height: #{$height})
      and (-webkit-device-pixel-ratio: #{$pixel-ratio})
      and (orientation: #{$orientation})  { @content; }
    }
  }
}
